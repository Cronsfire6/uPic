

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Feb 06 20:16:04 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.32
    14                           ; Generated 02/02/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0092                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009F                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  008C                     	;# 
   113  008E                     	;# 
   114  0092                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009F                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  008C                     	;# 
   150  008E                     	;# 
   151  0092                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009F                     	;# 
   159  0005                     _PORTAbits	set	5
   160  001F                     _CMCONbits	set	31
   161  0001                     _TMR0	set	1
   162  0081                     _OPTION_REGbits	set	129
   163  0085                     _TRISAbits	set	133
   164  008E                     _PCONbits	set	142
   165                           
   166                           	psect	cinit
   167  07FE                     start_initialization:	
   168                           ; #config settings
   169                           
   170  07FE                     __initialization:
   171  07FE                     end_of_initialization:	
   172                           ;End of C runtime variable initialization code
   173                           
   174  07FE                     __end_of__initialization:
   175  07FE  0183               	clrf	3
   176  07FF  2FDA               	ljmp	_main	;jump to C main() function
   177                           
   178                           	psect	cstackCOMMON
   179  0070                     __pcstackCOMMON:
   180  0070                     ?_internal_4:
   181  0070                     ??_internal_4:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0070                     ?_ReadTimer0:	
   185                           ; 1 bytes @ 0x0
   186                           
   187  0070                     ??_ReadTimer0:	
   188                           ; 1 bytes @ 0x0
   189                           
   190  0070                     ?_initMain:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ??_initMain:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?_main:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 1 bytes @ 0x0
   201  0070                     	ds	1
   202  0071                     ReadTimer0@readVal:
   203                           
   204                           ; 1 bytes @ 0x1
   205  0071                     	ds	1
   206  0072                     ??_main:
   207                           
   208                           ; 1 bytes @ 0x2
   209  0072                     	ds	3
   210  0075                     main@count:
   211                           
   212                           ; 1 bytes @ 0x5
   213  0075                     	ds	1
   214                           
   215                           	psect	maintext
   216  07DA                     __pmaintext:	
   217 ;;
   218 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   219 ;;
   220 ;; *************** function _main *****************
   221 ;; Defined at:
   222 ;;		line 36 in file "Main.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  count           1    5[COMMON] unsigned char 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0, pclath, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : B00/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   236 ;;      Params:         0       0       0       0
   237 ;;      Locals:         1       0       0       0
   238 ;;      Temps:          3       0       0       0
   239 ;;      Totals:         4       0       0       0
   240 ;;Total ram usage:        4 bytes
   241 ;; Hardware stack levels required when called: 2
   242 ;; This function calls:
   243 ;;		_ReadTimer0
   244 ;;		_initMain
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           
   251                           ;psect for function _main
   252  07DA                     _main:
   253                           
   254                           ;Main.c: 38: initMain();
   255                           
   256                           ;incstack = 0
   257                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   258  07DA  27C8               	fcall	_initMain
   259  07DB                     l607:
   260                           
   261                           ;Main.c: 42: count=ReadTimer0();
   262  07DB  27C0               	fcall	_ReadTimer0
   263  07DC  00F2               	movwf	??_main
   264  07DD  0872               	movf	??_main,w
   265  07DE  00F5               	movwf	main@count
   266                           
   267                           ;Main.c: 43: if(count==5){
   268  07DF  3005               	movlw	5
   269  07E0  0675               	xorwf	main@count,w
   270  07E1  1D03               	btfss	3,2
   271  07E2  2FDB               	goto	l607
   272                           
   273                           ;Main.c: 45: PORTAbits.RA0=~PORTAbits.RA0;
   274  07E3  1003               	clrc
   275  07E4  1C05               	btfss	5,0	;volatile
   276  07E5  1403               	setc
   277  07E6  1C03               	btfss	3,0
   278  07E7  2FEC               	goto	u20
   279  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   280  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   281  07EA  1405               	bsf	5,0	;volatile
   282  07EB  2FEF               	goto	l613
   283  07EC                     u20:
   284  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   285  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   286  07EE  1005               	bcf	5,0	;volatile
   287  07EF                     l613:
   288                           
   289                           ;Main.c: 46: TMR0=0;
   290  07EF  0181               	clrf	1	;volatile
   291                           
   292                           ;Main.c: 47: _delay((unsigned long)((2000)*(4000000/4000.0)));
   293  07F0  300B               	movlw	11
   294  07F1  00F4               	movwf	??_main+2
   295  07F2  3026               	movlw	38
   296  07F3  00F3               	movwf	??_main+1
   297  07F4  305D               	movlw	93
   298  07F5  00F2               	movwf	??_main
   299  07F6                     u47:
   300  07F6  0BF2               	decfsz	??_main,f
   301  07F7  2FF6               	goto	u47
   302  07F8  0BF3               	decfsz	??_main+1,f
   303  07F9  2FF6               	goto	u47
   304  07FA  0BF4               	decfsz	??_main+2,f
   305  07FB  2FF6               	goto	u47
   306  07FC  2FFD               	nop2
   307  07FD  2FDB               	goto	l607
   308  07FE                     __end_of_main:
   309                           
   310                           	psect	text1
   311  07C8                     __ptext1:	
   312 ;; *************** function _initMain *****************
   313 ;; Defined at:
   314 ;;		line 10 in file "Main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2, status,0, pclath, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : B00/0
   325 ;;		On exit  : B00/0
   326 ;;		Unchanged: 800/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   328 ;;      Params:         0       0       0       0
   329 ;;      Locals:         0       0       0       0
   330 ;;      Temps:          0       0       0       0
   331 ;;      Totals:         0       0       0       0
   332 ;;Total ram usage:        0 bytes
   333 ;; Hardware stack levels used: 1
   334 ;; Hardware stack levels required when called: 1
   335 ;; This function calls:
   336 ;;		_internal_4
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           
   343                           ;psect for function _initMain
   344  07C8                     _initMain:
   345                           
   346                           ;Main.c: 12: internal_4();
   347                           
   348                           ;incstack = 0
   349                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
   350  07C8  27BD               	fcall	_internal_4
   351                           
   352                           ;Main.c: 13: TRISAbits.TRISA0=0;
   353  07C9  1005               	bcf	5,0	;volatile
   354                           
   355                           ;Main.c: 14: TRISAbits.TRISA4=1;
   356  07CA  1605               	bsf	5,4	;volatile
   357                           
   358                           ;Main.c: 15: CMCONbits.CM0=1;
   359  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   360  07CC  141F               	bsf	31,0	;volatile
   361                           
   362                           ;Main.c: 16: CMCONbits.CM1=1;
   363  07CD  149F               	bsf	31,1	;volatile
   364                           
   365                           ;Main.c: 17: CMCONbits.CM2=1;
   366  07CE  151F               	bsf	31,2	;volatile
   367                           
   368                           ;Main.c: 18: PORTAbits.RA0=0;
   369  07CF  1005               	bcf	5,0	;volatile
   370                           
   371                           ;Main.c: 20: OPTION_REGbits.nRBPU=0;
   372  07D0  1683               	bsf	3,5	;RP0=1, select bank1
   373  07D1  1381               	bcf	1,7	;volatile
   374                           
   375                           ;Main.c: 21: OPTION_REGbits.T0CS=1;
   376  07D2  1681               	bsf	1,5	;volatile
   377                           
   378                           ;Main.c: 22: OPTION_REGbits.T0SE=0;
   379  07D3  1201               	bcf	1,4	;volatile
   380                           
   381                           ;Main.c: 23: OPTION_REGbits.PSA=0;
   382  07D4  1181               	bcf	1,3	;volatile
   383                           
   384                           ;Main.c: 24: OPTION_REGbits.PS=000;
   385  07D5  30F8               	movlw	-8
   386  07D6  0581               	andwf	1,f	;volatile
   387                           
   388                           ;Main.c: 29: TMR0=0;
   389  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   390  07D8  0181               	clrf	1	;volatile
   391  07D9  0008               	return
   392  07DA                     __end_of_initMain:
   393                           
   394                           	psect	text2
   395  07BD                     __ptext2:	
   396 ;; *************** function _internal_4 *****************
   397 ;; Defined at:
   398 ;;		line 3 in file "Configuracion.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		None
   407 ;; Tracked objects:
   408 ;;		On entry : B00/0
   409 ;;		On exit  : B00/100
   410 ;;		Unchanged: 800/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   412 ;;      Params:         0       0       0       0
   413 ;;      Locals:         0       0       0       0
   414 ;;      Temps:          0       0       0       0
   415 ;;      Totals:         0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; This function calls:
   419 ;;		Nothing
   420 ;; This function is called by:
   421 ;;		_initMain
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           
   426                           ;psect for function _internal_4
   427  07BD                     _internal_4:
   428                           
   429                           ;Configuracion.c: 5: PCONbits.OSCF=1;
   430                           
   431                           ;incstack = 0
   432                           ; Regs used in _internal_4: []
   433  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   434  07BE  158E               	bsf	14,3	;volatile
   435  07BF  0008               	return
   436  07C0                     __end_of_internal_4:
   437                           
   438                           	psect	text3
   439  07C0                     __ptext3:	
   440 ;; *************** function _ReadTimer0 *****************
   441 ;; Defined at:
   442 ;;		line 9 in file "Configuracion.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  readVal         1    1[COMMON] unsigned char 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      unsigned char 
   449 ;; Registers used:
   450 ;;		wreg
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 300/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   456 ;;      Params:         0       0       0       0
   457 ;;      Locals:         1       0       0       0
   458 ;;      Temps:          1       0       0       0
   459 ;;      Totals:         2       0       0       0
   460 ;;Total ram usage:        2 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           
   470                           ;psect for function _ReadTimer0
   471  07C0                     _ReadTimer0:
   472                           
   473                           ;Configuracion.c: 12: uint8_t readVal;;Configuracion.c: 14: readVal = TMR0;
   474                           
   475                           ;incstack = 0
   476                           ; Regs used in _ReadTimer0: [wreg]
   477  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   478  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   479  07C2  0801               	movf	1,w	;volatile
   480  07C3  00F0               	movwf	??_ReadTimer0
   481  07C4  0870               	movf	??_ReadTimer0,w
   482  07C5  00F1               	movwf	ReadTimer0@readVal
   483                           
   484                           ;Configuracion.c: 16: return readVal;
   485  07C6  0871               	movf	ReadTimer0@readVal,w
   486  07C7  0008               	return
   487  07C8                     __end_of_ReadTimer0:
   488  007E                     btemp	set	126	;btemp
   489  007E                     wtemp0	set	126
   490                           
   491                           	psect	config
   492                           
   493                           ;Config register CONFIG @ 0x2007
   494                           ;	Oscillator Selection bits
   495                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
   496                           ;	Watchdog Timer Enable bit
   497                           ;	WDTE = OFF, WDT disabled
   498                           ;	Power-up Timer Enable bit
   499                           ;	PWRTE = OFF, PWRT disabled
   500                           ;	RA5/MCLR/VPP Pin Function Select bit
   501                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
   502                           ;	Brown-out Detect Enable bit
   503                           ;	BOREN = OFF, BOD disabled
   504                           ;	Low-Voltage Programming Enable bit
   505                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   506                           ;	Data EE Memory Code Protection bit
   507                           ;	CPD = OFF, Data memory code protection off
   508                           ;	Flash Program Memory Code Protection bit
   509                           ;	CP = OFF, Code protection off
   510  2007                     	org	8199
   511  2007  3F18               	dw	16152

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ReadTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              2 COMMON     4     4      0
                         _ReadTimer0
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                         _internal_4
 ---------------------------------------------------------------------------------
 (2) _internal_4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadTimer0                                           2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadTimer0
   _initMain
     _internal_4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Feb 06 20:16:04 2022

                     u20 07EC                       u47 07F6                      l613 07EF  
                    l607 07DB                     _TMR0 0001                     _main 07DA  
                   btemp 007E                     start 0000                    ?_main 0070  
                  status 0003                    wtemp0 007E        ReadTimer0@readVal 0071  
        __initialization 07FE             __end_of_main 07FE               _ReadTimer0 07C0  
                 ??_main 0072         __end_of_initMain 07DA  __end_of__initialization 07FE  
         __pcstackCOMMON 0070              ?_ReadTimer0 0070           _OPTION_REGbits 0081  
             __pmaintext 07DA      __size_of_ReadTimer0 0008                ?_initMain 0070  
              _CMCONbits 001F                  __ptext1 07C8                  __ptext2 07BD  
                __ptext3 07C0               _internal_4 07BD     end_of_initialization 07FE  
             ??_initMain 0070                _PORTAbits 0005                _TRISAbits 0085  
           ??_ReadTimer0 0070              ?_internal_4 0070      start_initialization 07FE  
     __end_of_ReadTimer0 07C8                ___latbits 0000        __size_of_initMain 0012  
    __size_of_internal_4 0003                 _PCONbits 008E                main@count 0075  
           ??_internal_4 0070                 _initMain 07C8            __size_of_main 0024  
     __end_of_internal_4 07C0  
