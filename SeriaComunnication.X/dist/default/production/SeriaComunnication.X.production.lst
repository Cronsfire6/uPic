

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Feb 08 17:24:40 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.32
    21                           ; Generated 02/02/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F628A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  008C                     	;# 
    83  008E                     	;# 
    84  0092                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009F                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  008C                     	;# 
   120  008E                     	;# 
   121  0092                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009F                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  008C                     	;# 
   157  008E                     	;# 
   158  0092                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009F                     	;# 
   166                           
   167                           	psect	idataCOMMON
   168  0097                     __pidataCOMMON:
   169                           
   170                           ;initializer for _RXIN
   171  0097  3403               	retlw	3
   172  0019                     _TXREG	set	25
   173  001A                     _RCREG	set	26
   174  000B                     _INTCONbits	set	11
   175  000C                     _PIR1bits	set	12
   176  0018                     _RCSTAbits	set	24
   177  0005                     _PORTAbits	set	5
   178  001F                     _CMCONbits	set	31
   179  00C4                     _CREN	set	196
   180  00C7                     _SPEN	set	199
   181  008E                     _PCONbits	set	142
   182  008C                     _PIE1bits	set	140
   183  0099                     _SPBRG	set	153
   184  0098                     _TXSTAbits	set	152
   185  0085                     _TRISAbits	set	133
   186  0086                     _TRISBbits	set	134
   187                           
   188                           	psect	cinit
   189  000B                     start_initialization:	
   190                           ; #config settings
   191                           
   192  000B                     __initialization:
   193                           
   194                           ; Initialize objects allocated to COMMON
   195  000B  2097               	fcall	__pidataCOMMON	;fetch initializer
   196  000C  00FB               	movwf	__pdataCOMMON& (0+127)
   197                           
   198                           ; Clear objects allocated to COMMON
   199  000D  01F7               	clrf	__pbssCOMMON& (0+127)
   200  000E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   201  000F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   202  0010  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   203  0011                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206  0011                     __end_of__initialization:
   207  0011  0183               	clrf	3
   208  0012  2813               	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMMON
   211  0077                     __pbssCOMMON:
   212  0077                     _flagRXOverrunError:
   213  0077                     	ds	2
   214  0079                     _flagRXFramingError:
   215  0079                     	ds	2
   216                           
   217                           	psect	dataCOMMON
   218  007B                     __pdataCOMMON:
   219  007B                     _RXIN:
   220  007B                     	ds	1
   221                           
   222                           	psect	cstackCOMMON
   223  0070                     __pcstackCOMMON:
   224  0070                     ?_internal_4:
   225  0070                     ?_TX:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_initMain:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_main:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_RX:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ??_RX:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_writeRXIN:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ??_writeRXIN:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_ISR:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     writeRXIN@a:	
   250                           ; 1 bytes @ 0x0
   251                           
   252                           
   253                           ; 1 bytes @ 0x0
   254  0070                     	ds	1
   255  0071                     ??_ISR:
   256                           
   257                           ; 1 bytes @ 0x1
   258  0071                     	ds	2
   259  0073                     ??_internal_4:
   260  0073                     ??_TX:	
   261                           ; 1 bytes @ 0x3
   262                           
   263  0073                     ??_initMain:	
   264                           ; 1 bytes @ 0x3
   265                           
   266  0073                     TX@a:	
   267                           ; 1 bytes @ 0x3
   268                           
   269                           
   270                           ; 1 bytes @ 0x3
   271  0073                     	ds	1
   272  0074                     ??_main:
   273                           
   274                           ; 1 bytes @ 0x4
   275  0074                     	ds	3
   276                           
   277                           	psect	maintext
   278  0013                     __pmaintext:	
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 43 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, pclath, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : B00/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   298 ;;      Params:         0       0       0       0
   299 ;;      Locals:         0       0       0       0
   300 ;;      Temps:          3       0       0       0
   301 ;;      Totals:         3       0       0       0
   302 ;;Total ram usage:        3 bytes
   303 ;; Hardware stack levels required when called: 4
   304 ;; This function calls:
   305 ;;		_TX
   306 ;;		_initMain
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           
   313                           ;psect for function _main
   314  0013                     _main:
   315                           
   316                           ;main.c: 45: initMain();
   317                           
   318                           ;incstack = 0
   319                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   320  0013  2067               	fcall	_initMain
   321  0014                     l685:
   322                           
   323                           ;main.c: 51: {;main.c: 52: if(RXIN>0){
   324  0014  087B               	movf	_RXIN,w	;volatile
   325  0015  1903               	btfsc	3,2
   326  0016  2814               	goto	l685
   327                           
   328                           ;main.c: 53: _delay((unsigned long)((500)*(4000000/4000.0)));
   329  0017  3003               	movlw	3
   330  0018  00F6               	movwf	??_main+2
   331  0019  308A               	movlw	138
   332  001A  00F5               	movwf	??_main+1
   333  001B  3055               	movlw	85
   334  001C  00F4               	movwf	??_main
   335  001D                     u107:
   336  001D  0BF4               	decfsz	??_main,f
   337  001E  281D               	goto	u107
   338  001F  0BF5               	decfsz	??_main+1,f
   339  0020  281D               	goto	u107
   340  0021  0BF6               	decfsz	??_main+2,f
   341  0022  281D               	goto	u107
   342  0023  2824               	nop2
   343                           
   344                           ;main.c: 54: PORTAbits.RA0=~PORTAbits.RA0;
   345  0024  1003               	clrc
   346  0025  1283               	bcf	3,5	;RP0=0, select bank0
   347  0026  1303               	bcf	3,6	;RP1=0, select bank0
   348  0027  1C05               	btfss	5,0	;volatile
   349  0028  1403               	setc
   350  0029  1C03               	btfss	3,0
   351  002A  282F               	goto	u30
   352  002B  1283               	bcf	3,5	;RP0=0, select bank0
   353  002C  1303               	bcf	3,6	;RP1=0, select bank0
   354  002D  1405               	bsf	5,0	;volatile
   355  002E  2832               	goto	l691
   356  002F                     u30:
   357  002F  1283               	bcf	3,5	;RP0=0, select bank0
   358  0030  1303               	bcf	3,6	;RP1=0, select bank0
   359  0031  1005               	bcf	5,0	;volatile
   360  0032                     l691:
   361                           
   362                           ;main.c: 55: TX(RXIN);
   363  0032  087B               	movf	_RXIN,w	;volatile
   364  0033  2087               	fcall	_TX
   365                           
   366                           ;main.c: 56: _delay((unsigned long)((500)*(4000000/4000.0)));
   367  0034  3003               	movlw	3
   368  0035  00F6               	movwf	??_main+2
   369  0036  308A               	movlw	138
   370  0037  00F5               	movwf	??_main+1
   371  0038  3055               	movlw	85
   372  0039  00F4               	movwf	??_main
   373  003A                     u117:
   374  003A  0BF4               	decfsz	??_main,f
   375  003B  283A               	goto	u117
   376  003C  0BF5               	decfsz	??_main+1,f
   377  003D  283A               	goto	u117
   378  003E  0BF6               	decfsz	??_main+2,f
   379  003F  283A               	goto	u117
   380  0040  2841               	nop2
   381                           
   382                           ;main.c: 57: RXIN--;
   383  0041  3001               	movlw	1
   384  0042  02FB               	subwf	_RXIN,f	;volatile
   385  0043  2814               	goto	l685
   386  0044                     __end_of_main:
   387                           
   388                           	psect	text1
   389  0067                     __ptext1:	
   390 ;; *************** function _initMain *****************
   391 ;; Defined at:
   392 ;;		line 3 in file "main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : B00/100
   404 ;;		Unchanged: 800/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   406 ;;      Params:         0       0       0       0
   407 ;;      Locals:         0       0       0       0
   408 ;;      Temps:          0       0       0       0
   409 ;;      Totals:         0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels used: 1
   412 ;; Hardware stack levels required when called: 3
   413 ;; This function calls:
   414 ;;		_internal_4
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _initMain
   422  0067                     _initMain:
   423                           
   424                           ;main.c: 5: internal_4();
   425                           
   426                           ;incstack = 0
   427                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
   428  0067  2091               	fcall	_internal_4
   429                           
   430                           ;main.c: 6: CMCONbits.CM0=1;
   431  0068  1283               	bcf	3,5	;RP0=0, select bank0
   432  0069  141F               	bsf	31,0	;volatile
   433                           
   434                           ;main.c: 7: CMCONbits.CM1=1;
   435  006A  149F               	bsf	31,1	;volatile
   436                           
   437                           ;main.c: 8: CMCONbits.CM2=1;
   438  006B  151F               	bsf	31,2	;volatile
   439                           
   440                           ;main.c: 9: TRISBbits.TRISB1=1;
   441  006C  1683               	bsf	3,5	;RP0=1, select bank1
   442  006D  1486               	bsf	6,1	;volatile
   443                           
   444                           ;main.c: 10: TRISBbits.TRISB2=1;
   445  006E  1506               	bsf	6,2	;volatile
   446                           
   447                           ;main.c: 11: TRISAbits.TRISA0=0;
   448  006F  1005               	bcf	5,0	;volatile
   449                           
   450                           ;main.c: 12: PORTAbits.RA0=0;
   451  0070  1283               	bcf	3,5	;RP0=0, select bank0
   452  0071  1005               	bcf	5,0	;volatile
   453                           
   454                           ;main.c: 14: TXSTAbits.TX9=0;
   455  0072  1683               	bsf	3,5	;RP0=1, select bank1
   456  0073  1318               	bcf	24,6	;volatile
   457                           
   458                           ;main.c: 15: TXSTAbits.TXEN=1;
   459  0074  1698               	bsf	24,5	;volatile
   460                           
   461                           ;main.c: 16: TXSTAbits.SYNC=0;
   462  0075  1218               	bcf	24,4	;volatile
   463                           
   464                           ;main.c: 17: TXSTAbits.BRGH=1;
   465  0076  1518               	bsf	24,2	;volatile
   466                           
   467                           ;main.c: 19: RCSTAbits.SPEN=1;
   468  0077  1283               	bcf	3,5	;RP0=0, select bank0
   469  0078  1798               	bsf	24,7	;volatile
   470                           
   471                           ;main.c: 20: RCSTAbits.RX9=0;
   472  0079  1318               	bcf	24,6	;volatile
   473                           
   474                           ;main.c: 21: RCSTAbits.CREN=1;
   475  007A  1618               	bsf	24,4	;volatile
   476                           
   477                           ;main.c: 23: SPBRG=25;
   478  007B  3019               	movlw	25
   479  007C  1683               	bsf	3,5	;RP0=1, select bank1
   480  007D  0099               	movwf	25	;volatile
   481                           
   482                           ;main.c: 26: PIE1bits.TXIE=0;
   483  007E  120C               	bcf	12,4	;volatile
   484                           
   485                           ;main.c: 27: PIR1bits.RCIF=0;
   486  007F  1283               	bcf	3,5	;RP0=0, select bank0
   487  0080  128C               	bcf	12,5	;volatile
   488                           
   489                           ;main.c: 28: PIR1bits.TXIF=0;
   490  0081  120C               	bcf	12,4	;volatile
   491                           
   492                           ;main.c: 29: PIE1bits.RCIE=1;
   493  0082  1683               	bsf	3,5	;RP0=1, select bank1
   494  0083  168C               	bsf	12,5	;volatile
   495                           
   496                           ;main.c: 30: INTCONbits.PEIE=1;
   497  0084  170B               	bsf	11,6	;volatile
   498                           
   499                           ;main.c: 31: INTCONbits.GIE=1;
   500  0085  178B               	bsf	11,7	;volatile
   501  0086  0008               	return
   502  0087                     __end_of_initMain:
   503                           
   504                           	psect	text2
   505  0091                     __ptext2:	
   506 ;; *************** function _internal_4 *****************
   507 ;; Defined at:
   508 ;;		line 3 in file "usart.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		None
   517 ;; Tracked objects:
   518 ;;		On entry : B00/0
   519 ;;		On exit  : B00/100
   520 ;;		Unchanged: 800/0
   521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   522 ;;      Params:         0       0       0       0
   523 ;;      Locals:         0       0       0       0
   524 ;;      Temps:          0       0       0       0
   525 ;;      Totals:         0       0       0       0
   526 ;;Total ram usage:        0 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 2
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_initMain
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _internal_4
   538  0091                     _internal_4:
   539                           
   540                           ;usart.c: 5: PCONbits.OSCF=1;
   541                           
   542                           ;incstack = 0
   543                           ; Regs used in _internal_4: []
   544  0091  1683               	bsf	3,5	;RP0=1, select bank1
   545  0092  158E               	bsf	14,3	;volatile
   546  0093  0008               	return
   547  0094                     __end_of_internal_4:
   548                           
   549                           	psect	text3
   550  0087                     __ptext3:	
   551 ;; *************** function _TX *****************
   552 ;; Defined at:
   553 ;;		line 17 in file "usart.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  a               1    wreg     unsigned char 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  a               1    3[COMMON] unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg
   562 ;; Tracked objects:
   563 ;;		On entry : 300/0
   564 ;;		On exit  : 300/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   567 ;;      Params:         0       0       0       0
   568 ;;      Locals:         1       0       0       0
   569 ;;      Temps:          0       0       0       0
   570 ;;      Totals:         1       0       0       0
   571 ;;Total ram usage:        1 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; Hardware stack levels required when called: 2
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _TX
   583  0087                     _TX:
   584                           
   585                           ;incstack = 0
   586                           ; Regs used in _TX: [wreg]
   587                           ;TX@a stored from wreg
   588  0087  00F3               	movwf	TX@a
   589  0088                     l78:	
   590                           ;usart.c: 18: while(!PIR1bits.TXIF);
   591                           
   592  0088  1E0C               	btfss	12,4	;volatile
   593  0089  2888               	goto	l78
   594                           
   595                           ;usart.c: 19: TXREG = a;
   596  008A  0873               	movf	TX@a,w
   597  008B  0099               	movwf	25	;volatile
   598  008C  0008               	return
   599  008D                     __end_of_TX:
   600                           
   601                           	psect	text4
   602  0044                     __ptext4:	
   603 ;; *************** function _ISR *****************
   604 ;; Defined at:
   605 ;;		line 23 in file "usart.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 200/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   619 ;;      Params:         0       0       0       0
   620 ;;      Locals:         0       0       0       0
   621 ;;      Temps:          2       0       0       0
   622 ;;      Totals:         2       0       0       0
   623 ;;Total ram usage:        2 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 1
   626 ;; This function calls:
   627 ;;		_RX
   628 ;;		_writeRXIN
   629 ;; This function is called by:
   630 ;;		Interrupt level 1
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _ISR
   636  0044                     _ISR:
   637                           
   638                           ;usart.c: 25: if(PIE1bits.RCIE && PIR1bits.RCIF){
   639  0044  1683               	bsf	3,5	;RP0=1, select bank1
   640  0045  1303               	bcf	3,6	;RP1=0, select bank1
   641  0046  1E8C               	btfss	12,5	;volatile
   642  0047  2860               	goto	i1l92
   643  0048  1283               	bcf	3,5	;RP0=0, select bank0
   644  0049  1A8C               	btfsc	12,5	;volatile
   645  004A  284E               	goto	i1l705
   646  004B  2860               	goto	i1l92
   647  004C                     i1l703:
   648                           
   649                           ;usart.c: 27: writeRXIN(RX());
   650  004C  208D               	fcall	_RX
   651  004D  2094               	fcall	_writeRXIN
   652  004E                     i1l705:
   653  004E  1A8C               	btfsc	12,5	;volatile
   654  004F  284C               	goto	i1l703
   655                           
   656                           ;usart.c: 28: };usart.c: 30: if(RCSTAbits.FERR){
   657  0050  1D18               	btfss	24,2	;volatile
   658  0051  2858               	goto	i1l713
   659                           
   660                           ;usart.c: 31: flagRXFramingError = 1;
   661  0052  3001               	movlw	1
   662  0053  00F9               	movwf	_flagRXFramingError
   663  0054  3000               	movlw	0
   664  0055  00FA               	movwf	_flagRXFramingError+1
   665                           
   666                           ;usart.c: 32: SPEN = 0;
   667  0056  1398               	bcf	24,7	;volatile
   668                           
   669                           ;usart.c: 33: SPEN = 1;
   670  0057  1798               	bsf	24,7	;volatile
   671  0058                     i1l713:
   672                           
   673                           ;usart.c: 35: };usart.c: 36: if(RCSTAbits.OERR){
   674  0058  1C98               	btfss	24,1	;volatile
   675  0059  2860               	goto	i1l92
   676                           
   677                           ;usart.c: 37: flagRXOverrunError = 1;
   678  005A  3001               	movlw	1
   679  005B  00F7               	movwf	_flagRXOverrunError
   680  005C  3000               	movlw	0
   681  005D  00F8               	movwf	_flagRXOverrunError+1
   682                           
   683                           ;usart.c: 38: CREN = 0;
   684  005E  1218               	bcf	24,4	;volatile
   685                           
   686                           ;usart.c: 39: CREN = 1;
   687  005F  1618               	bsf	24,4	;volatile
   688  0060                     i1l92:
   689  0060  0872               	movf	??_ISR+1,w
   690  0061  008A               	movwf	10
   691  0062  0E71               	swapf	??_ISR,w
   692  0063  0083               	movwf	3
   693  0064  0EFE               	swapf	126,f
   694  0065  0E7E               	swapf	126,w
   695  0066  0009               	retfie
   696  0067                     __end_of_ISR:
   697                           
   698                           	psect	intentry
   699  0004                     __pintentry:	
   700                           ;incstack = 0
   701                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   702                           
   703  0004                     interrupt_function:
   704  007E                     saved_w	set	btemp
   705  0004  00FE               	movwf	btemp
   706  0005  0E03               	swapf	3,w
   707  0006  00F1               	movwf	??_ISR
   708  0007  080A               	movf	10,w
   709  0008  00F2               	movwf	??_ISR+1
   710  0009  2844               	ljmp	_ISR
   711                           
   712                           	psect	text5
   713  0094                     __ptext5:	
   714 ;; *************** function _writeRXIN *****************
   715 ;; Defined at:
   716 ;;		line 13 in file "usart.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  a               1    wreg     volatile unsigned char 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  a               1    0[COMMON] volatile unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg
   725 ;; Tracked objects:
   726 ;;		On entry : 300/0
   727 ;;		On exit  : 300/0
   728 ;;		Unchanged: 300/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   730 ;;      Params:         0       0       0       0
   731 ;;      Locals:         1       0       0       0
   732 ;;      Temps:          0       0       0       0
   733 ;;      Totals:         1       0       0       0
   734 ;;Total ram usage:        1 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_ISR
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _writeRXIN
   745  0094                     _writeRXIN:
   746                           
   747                           ;incstack = 0
   748                           ; Regs used in _writeRXIN: [wreg]
   749                           ;writeRXIN@a stored from wreg
   750  0094  00F0               	movwf	writeRXIN@a	;volatile
   751                           
   752                           ;usart.c: 14: RXIN = a;
   753  0095  00FB               	movwf	_RXIN	;volatile
   754  0096  0008               	return
   755  0097                     __end_of_writeRXIN:
   756                           
   757                           	psect	text6
   758  008D                     __ptext6:	
   759 ;; *************** function _RX *****************
   760 ;; Defined at:
   761 ;;		line 9 in file "usart.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      unsigned char 
   768 ;; Registers used:
   769 ;;		wreg
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 300/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   775 ;;      Params:         0       0       0       0
   776 ;;      Locals:         0       0       0       0
   777 ;;      Temps:          0       0       0       0
   778 ;;      Totals:         0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_ISR
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           
   789                           ;psect for function _RX
   790  008D                     _RX:
   791                           
   792                           ;usart.c: 10: return RCREG;
   793                           
   794                           ;incstack = 0
   795                           ; Regs used in _RX: [wreg]
   796  008D  1283               	bcf	3,5	;RP0=0, select bank0
   797  008E  1303               	bcf	3,6	;RP1=0, select bank0
   798  008F  081A               	movf	26,w	;volatile
   799  0090  0008               	return
   800  0091                     __end_of_RX:
   801  007E                     btemp	set	126	;btemp
   802  007E                     wtemp0	set	126
   803                           
   804                           	psect	config
   805                           
   806                           ;Config register CONFIG @ 0x2007
   807                           ;	Oscillator Selection bits
   808                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
   809                           ;	Watchdog Timer Enable bit
   810                           ;	WDTE = OFF, WDT disabled
   811                           ;	Power-up Timer Enable bit
   812                           ;	PWRTE = OFF, PWRT disabled
   813                           ;	RA5/MCLR/VPP Pin Function Select bit
   814                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
   815                           ;	Brown-out Detect Enable bit
   816                           ;	BOREN = OFF, BOD disabled
   817                           ;	Low-Voltage Programming Enable bit
   818                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   819                           ;	Data EE Memory Code Protection bit
   820                           ;	CPD = OFF, Data memory code protection off
   821                           ;	Flash Program Memory Code Protection bit
   822                           ;	CP = OFF, Code protection off
   823  2007                     	org	8199
   824  2007  3F18               	dw	16152

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_TX

Critical Paths under _ISR in COMMON

    _ISR->_writeRXIN

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              4 COMMON     3     3      0
                                 _TX
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                         _internal_4
 ---------------------------------------------------------------------------------
 (2) _internal_4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX                                                   1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0      15
                                              1 COMMON     2     2      0
                                 _RX
                          _writeRXIN
 ---------------------------------------------------------------------------------
 (4) _writeRXIN                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RX                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TX
   _initMain
     _internal_4

 _ISR (ROOT)
   _RX
   _writeRXIN

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      10        0.0%
ABS                  0      0       C       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Feb 08 17:24:40 2022

                     l78 0088                       u30 002F                       _RX 008D  
                     _TX 0087                      ?_RX 0070                      ?_TX 0070  
                    l691 0032                      l685 0014                      TX@a 0073  
                    u107 001D                      u117 003A                      _ISR 0044  
                   ??_RX 0070                     ??_TX 0073                     ?_ISR 0070  
                   _CREN 00C4                     i1l92 0060                     _SPEN 00C7  
                   _RXIN 007B                     _main 0013                     btemp 007E  
                   start 000A                    ??_ISR 0071                    ?_main 0070  
                  i1l703 004C                    i1l713 0058                    i1l705 004E  
                  _RCREG 001A                    _SPBRG 0099                    _TXREG 0019  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 0044                   ??_main 0074  
       __end_of_initMain 0087       _flagRXFramingError 0079             __pdataCOMMON 007B  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
             __end_of_RX 0091               __end_of_TX 008D               __pmaintext 0013  
             __pintentry 0004                ?_initMain 0070       __size_of_writeRXIN 0003  
              _CMCONbits 001F                  __ptext1 0067                  __ptext2 0091  
                __ptext3 0087                  __ptext4 0044                  __ptext5 0094  
                __ptext6 008D             __size_of_ISR 0023               _internal_4 0091  
   end_of_initialization 0011               ??_initMain 0073                _RCSTAbits 0018  
              _PORTAbits 0005        __end_of_writeRXIN 0097                _TRISAbits 0085  
              _TRISBbits 0086                _TXSTAbits 0098            __pidataCOMMON 0097  
            ?_internal_4 0070      start_initialization 000B              __end_of_ISR 0067  
            __pbssCOMMON 0077                ___latbits 0000        __size_of_initMain 0020  
    __size_of_internal_4 0003       _flagRXOverrunError 0077              __size_of_RX 0004  
            __size_of_TX 0006        interrupt_function 0004                 _PIE1bits 008C  
               _PCONbits 008E                 _PIR1bits 000C                _writeRXIN 0094  
           ??_internal_4 0073               ?_writeRXIN 0070                 _initMain 0067  
          __size_of_main 0031               writeRXIN@a 0070       __end_of_internal_4 0094  
             _INTCONbits 000B                 intlevel1 0000              ??_writeRXIN 0070  
